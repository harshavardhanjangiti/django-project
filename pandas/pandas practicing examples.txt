import pandas as pd
data=pd.read_csv("F:\\Desktop\\nba.csv")
df=pd.DataFrame(data)
print(df)

k=df.groupby('Team')
print(k)

k.count()


l=[1,2,3]
k=l.append(4)
print(l)




# k.get_group('Boston Celtics')

k.get_group('Philadelphia 76ers')

# k.get_group(7730337.0  )



k=df.groupby('Position')

k.count()

k.count()

# k.get_group('PF')

data={'name':[1,2,3,4],'age':[14,15,16,17]}
df=pd.DataFrame(data)
print(df)

# df.rename(columns={'name':'harsha','age':'nani'},inplace=True)

# print(df)

#Write a Pandas program to create and display a one-dimensional array-like object containing an array of data using Pandas module.
import numpy as np
import pandas as pd
ds=pd.Series([2,4,6,8,10])
print(ds)








#Write a Pandas program to convert a Panda module Series to Python list and it's type.
ds=pd.Series([10,20,30,40,50])
print(ds)
print(type(ds))
print("convert pandas to python list")
print(ds.tolist())
print(type(ds.tolist()))

#  Write a Pandas program to add, subtract, multiple and divide two Pandas Series?
# Sample Series: [2, 4, 6, 8, 10], [1, 3, 5, 7, 9]
ds1=pd.Series([2,4,6,8,10])
ds2=pd.Series([1,3,5,7,9])
# add pandas series arrays
ds=ds1+ds2
print(ds)
#substract two arrays
ds=ds1+ds2
print(ds)
# multiplication of two arrays
ds=ds1*ds2
print(ds)
# divide the series 1 by series 2
ds=ds1/ds2
print(ds)



#  Write a Pandas program to compare the elements of the two Pandas Series.
# Sample Series: [2, 4, 6, 8, 10], [1, 3, 5, 7, 10]
ds1=pd.Series([2,4,6,8,10])
ds2=pd.Series([1,3,5,7,10])
print('series1')
print(ds1)
print('series2')
print(ds2)
print("compare the element of series")
print("Equals:")
print(ds1 == ds2)
print("Greater than:")
print(ds1 > ds2)
print("Less than:")
print(ds1 < ds2)


# Write a Pandas program to convert a dictionary to a Pandas series.
dictpd=pd.Series({'harsha':25,'nani':20,'himanth':100})
print(dictpd)


#  Write a Pandas program to convert a NumPy array to a Pandas series. Go to the editor
# Sample Series:
# NumPy array:
import numpy as np
# [10 20 30 40 50]
# d=np.array([10,20,30,40,50])
# print(d)
# ds=pd.Series(d)
# print(dS)
np_array = np.array([10, 20, 30, 40, 50])
print("NumPy array:")
print(np_array)
new_series = pd.Series(np_array)
print("Converted Pandas series:")
print(new_series)

import pandas as pd
# Write a Pandas program to change the data type of given a column or a Series.

# Sample Series:
# Original Data Series:
# 0 100
# 1 200
# 2 python
# 3 300.12
# 4 400
# dtype: object
# Change the said data type to numeric:
# 0 100.00
# 1 200.00
# 2 NaN
# 3 300.12
# 4 400.00
# dtype: float64
import pandas as pd
s1 = pd.Series(['100', '200', 'python', '300.12', '400'])
print(s1)
s2=pd.to_numeric(s1,errors='coerce' )
print(s2)


# Write a Pandas program to convert the first column of a DataFrame as a Series.
import pandas as pd
d = {'col1': [1, 2, 3, 4, 7, 11], 'col2': [4, 5, 6, 9, 5, 0], 'col3': [7, 5, 8, 12, 1,11]}
df=pd.DataFrame(data=d)
print(df)
s1 = df.iloc[:,0]
print(s1)


# Write a Pandas program to create a subset of a given series based on value and condition.
import pandas as pd
s = pd.Series([0, 1,2,3,4,5,6,7,8,9,10])
print("Original Data Series:")
print(s)
print("\nSubset of the above Data Series:")
n = 6
new_s = s[s < n]
print(new_s)

#PROGRAMS ON PANDAS DATA FRAME
# 1. Write a Pandas program to get the powers of an array values element-wise.
# Sample data: {'X':[78,85,96,80,86], 'Y':[84,94,89,83,86],'Z':[86,97,96,72,83]}
import pandas as pd
df = pd.DataFrame({'X':[78,85,96,80,86], 'Y':[84,94,89,83,86],'Z':[86,97,96,72,83]});
print(df)


# 2. Write a Pandas program to create and display a DataFrame from a specified dictionary data which has the index labels. Go to the editor
# Sample Python dictionary data and list labels:
import numpy as np
import pandas as pd
exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
df = pd.DataFrame(exam_data , index=labels)
print(df)

# Write a Pandas program to get the first 3 rows of a given DataFrame.
import pandas as pd
import numpy as np
exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
df=pd.DataFrame(exam_data,index=labels)
print(df)
df.iloc[0:4]

# Write a Pandas program to select the 'name' and 'score' columns from the following DataFrame.
import pandas as pd
import numpy as np

exam_data  = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
        'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
        'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
        'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']

df = pd.DataFrame(exam_data , index=labels)
print("Select specific columns:")
print(df[['name', 'score']])

# Write a Pandas program to select the specified columns and rows from a given DataFrame.
# Select 'name' and 'score' columns in rows 1, 3, 5, 6 from the following data frame.

# Sample DataFrame:
exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
df = pd.DataFrame(exam_data , index=labels)
print("Select specific columns and rows:")
print(df.iloc[[1, 3, 5, 6], [1, 3]])

# 7. Write a Pandas program to select the rows where the number of attempts in the examination is greater than 2. Go to the editor
# Sample Python dictionary data and list labels:
exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
df=pd.DataFrame(exam_data,index=labels)
print(df)

x=df[df['attempts']>2]
print(x)

x.dropna()

# . Write a Pandas program to count the number of rows and columns of a DataFrame. Go to the editor

import pandas as pd 
import numpy as np# Sample Python dictionary data and list labels:
exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
df=pd.DataFrame(exam_data,index=labels)
print(df)

total_rows=len(df.axes[0])
print('no of rows'+str(total_rows))
total_columns=len(df.axes[1])
print('no of columns'+str(total_columns))

df[df['score'].isna()]

# 10. Write a Pandas program to select the rows the score is between 15 and 20 (inclusive)
df[df['score'].between(15,20)]


# Write a Pandas program to change the score in row 'd' to 11.5
import pandas as pd 
import numpy as np# Sample Python dictionary data and list labels:
exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
df=pd.DataFrame(exam_data,index=labels)
# print(df)
df.loc['d','score']=100
print(df)

# Write a Pandas program to select the rows where number of attempts in the examination is less than 2 and score greater than 15.
print(df[(df['attempts']<2)&(df['score']>15)])

print(df['attempts'].sum())

# Write a Pandas program to calculate the mean score for each different student in data frame.
print(df['score'].mean())


# Write a Pandas program to append a new row 'k' to DataFrame with given values for each column. Now delete the new row and return the original data frame.
df.loc['k']=[1,'suresh','yes',15.5]
# address = ['Delhi', 'Bangalore', 'Chennai', 'Patna',1,2,3,4,5,6]
# df['ADDRESS']=address
print(df)

import pandas as pd 
import numpy as np# Sample Python dictionary data and list labels:
exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
df=pd.DataFrame(exam_data,index=labels)
print(df)

# adress=[1,2,3,4,5,6,7,8,9,10]
# df['ADDRESS']=[1,2,3,4,5,6,7,8,9,10]
df.insert(2, "Age", [21, 23, 24, 21,1,2,3,4,5,6], True)
print(df)

